name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: geometry_api_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3
        bundler-cache: true
    
    - name: Set up Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        gem install bundler
        bundle install --jobs 4 --retry 3
    
    - name: Set up test database
      run: |
        bundle exec rails db:create
        bundle exec rails db:migrate
      env:
        RAILS_ENV: test
        DATABASE_URL: postgresql://postgres:password@localhost:5432/geometry_api_test
    
    - name: Run RuboCop
      run: bundle exec rubocop
    
    - name: Run Brakeman
      run: bundle exec brakeman --no-pager
    
    - name: Run tests
      run: bundle exec rspec
      env:
        RAILS_ENV: test
        DATABASE_URL: postgresql://postgres:password@localhost:5432/geometry_api_test
    
    - name: Generate Swagger docs
      run: bundle exec rake rswag:specs:swaggerize
      env:
        RAILS_ENV: test
        DATABASE_URL: postgresql://postgres:password@localhost:5432/geometry_api_test

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3
        bundler-cache: true
    
    - name: Run bundle audit
      run: bundle exec bundle-audit check --update
    
    - name: Run Brakeman
      run: bundle exec brakeman --no-pager

  docker:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/geometry-api:latest
          ${{ secrets.DOCKER_USERNAME }}/geometry-api:${{ github.sha }}